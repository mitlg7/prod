drop
    database if exists work;
create
    database work;

create table category
(
    id   integer primary key GENERATED BY DEFAULT AS IDENTITY,
    type varchar(250) not null unique
);

create table sub_category
(
    id          integer primary key GENERATED BY DEFAULT AS IDENTITY,
    type        varchar(250) not null unique,
    category_id integer,
    foreign key (category_id) references category (id)
);

create table role
(
    id   integer primary key GENERATED BY DEFAULT AS IDENTITY,
    type varchar(50) not null unique
);
create table user_info
(
    id       integer primary key GENERATED BY DEFAULT AS IDENTITY,
    name     varchar(250) not null,
    lastName varchar(250),
    phone    varchar(250),
    image    varchar(512),
    birthday date         not null
);


create table users
(
    id       integer primary key GENERATED BY DEFAULT AS IDENTITY,
    login    varchar(250) not null unique,
    password varchar(250) not null,
    email    varchar(250),
    info_id  integer,
    role_id  integer,
    foreign key (role_id) references role (id),
    foreign key (info_id) references user_info (id) on delete cascade on update cascade
);


create table product
(
    id              integer primary key GENERATED BY DEFAULT AS IDENTITY,
    user_id         integer       not null,
    name            varchar(250)  not null,
    image           varchar(512)  not null,
    description     varchar(1024) not null,
    date            date,
    price           decimal       not null,
    category_id     integer,
    sub_category_id integer,
    foreign key (user_id) references users (id),
    foreign key (category_id) references category (id),
    foreign key (sub_category_id) references sub_category (id)
);

create table item
(
    id          integer primary key GENERATED BY DEFAULT AS IDENTITY,
    name        varchar(250) not null,
    image       varchar(512),
    date        date,
    description varchar(4096),
    user_id     integer,
    foreign key (user_id) references users (id)
);


create table comment
(
    id      integer primary key GENERATED BY DEFAULT AS IDENTITY,
    date    date    not null,
    user_id integer not null,
    message varchar(4096),
    item_id integer,
    foreign key (user_id) references users (id),
    foreign key (item_id) references item (id)

);

insert into role (type)
values ('ADMIN');
insert into role (type)
values ('MODER');
insert into role (type)
values ('USER');

insert into users (login, password, role_id)
values ('admin', 'admin', (select id from role where type = 'ADMIN'));
insert into users (login, password, role_id)
values ('moder', 'moder', (select id from role where type = 'MODER'));
insert into users (login, password, role_id)
values ('user', 'user', (select id from role where type = 'USER'));

INSERT INTO category (type)
values ('Металл');
INSERT INTO category (type)
values ('Дерево');
INSERT INTO category (type)
values ('Камень');
INSERT INTO category (type)
values ('Пластик');



CREATE PROCEDURE CREATE_USER(_LOGIN varchar, _PASSWORD varchar, _EMAIL varchar)
    LANGUAGE plpgsql
AS
$$
BEGIN
        INSERT INTO users(LOGIN, PASSWORD, EMAIL, ROLE_ID)
        VALUES (_LOGIN, _PASSWORD, _EMAIL, (SELECT ID FROM role WHERE type = 'USER'));
    COMMIT;
end;
$$;

CREATE PROCEDURE FIND_USER(_LOGIN varchar)
    LANGUAGE plpgsql
AS
$$
BEGIN
    SELECT u.id, u.login, u.email, r.type
    FROM users u
             join role r on u.role_id = r.id
    where u.login = _LOGIN;
END;
$$;

CREATE PROCEDURE ADD_PRODUCT(
    _USER_ID varchar,
    _NAME varchar,
    _PRICE varchar,
    _DATE date,
    _CATEGORY varchar,
    _SUB_CATEGORY varchar
)
    LANGUAGE plpgsql
AS
$$
BEGIN

end;
$$;